{"ast":null,"code":"import _objectSpread from \"/home/alanbaywalker/Documents/kingdom-hearts-countdown/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/alanbaywalker/Documents/kingdom-hearts-countdown/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alanbaywalker/Documents/kingdom-hearts-countdown/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alanbaywalker/Documents/kingdom-hearts-countdown/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alanbaywalker/Documents/kingdom-hearts-countdown/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alanbaywalker/Documents/kingdom-hearts-countdown/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alanbaywalker/Documents/kingdom-hearts-countdown/src/components/CountdownTimer/CountdownTimer.js\";\nimport React, { Component } from 'react';\nimport { Wrapper, FlexItem, Tube, Digit, Active, AltDigit } from './styles';\n\nvar CountdownTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountdownTimer, _Component);\n\n  function CountdownTimer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CountdownTimer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CountdownTimer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      seconds: 0,\n      countdown: {\n        seconds: '00',\n        minutes: '00',\n        hours: '00',\n        days: '00'\n      }\n    };\n\n    _this.fixNumber = function (num) {\n      return num.toString().length === 1 ? '0' : '';\n    };\n\n    _this.createTube = function (tubeType, element, styled) {\n      var _this$state$countdown = _this.state.countdown,\n          minutes = _this$state$countdown.minutes,\n          seconds = _this$state$countdown.seconds;\n      var totalDigits = 9;\n      var digits = [];\n\n      for (var i = 0; i <= totalDigits; i++) {\n        var conditionalDigit = parseInt(element, 10) === i ? React.createElement(Active, {\n          key: Math.random() * 1000000,\n          style: (parseInt(seconds[1], 10) % 2 === 0 || parseInt(seconds[1], 10) % 3 === 0 || parseInt(seconds[1], 10) % 5 === 0) && styled ? {\n            opacity: Math.random() - parseInt('0.' + seconds[1])\n          } : {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, i) : React.createElement(Digit, {\n          key: Math.random() * 1000000,\n          style: (parseInt(seconds[1], 10) % 2 === 0 || parseInt(seconds[1], 10) % 3 === 0 || parseInt(seconds[1], 10) % 5 === 0) && styled ? {\n            opacity: Math.random() - parseInt('0.' + seconds[1])\n          } : {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, i);\n        var letterDigit = React.createElement(Digit, {\n          key: Math.random() * 1000000,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"0\");\n        tubeType === 'letter' ? digits.push(letterDigit) : digits.push(conditionalDigit);\n      }\n\n      ;\n      return React.createElement(Tube, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, digits, tubeType === 'letter' ? React.createElement(AltDigit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, element) : null);\n    };\n\n    return _this;\n  }\n\n  _createClass(CountdownTimer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var fixNumber = this.fixNumber;\n      setInterval(function () {\n        return _this2.setState(_objectSpread({}, _this2.state, {\n          seconds: new Date().getSeconds().toString()\n        }));\n      }, 1800);\n      setInterval(function () {\n        var releaseDate = new Date('2019-1-29').getTime();\n        var currentDate = new Date().getTime();\n        var timeDifference = releaseDate - currentDate;\n        var ms = timeDifference % 1000;\n        timeDifference = (timeDifference - ms) / 1000;\n        var secs = timeDifference % 60;\n        timeDifference = (timeDifference - secs) / 60;\n        var mins = timeDifference % 60;\n        timeDifference = (timeDifference - mins) / 60;\n        var hrs = timeDifference % 24;\n        timeDifference = (timeDifference - hrs) / 24;\n        var days = timeDifference % 24;\n\n        _this2.setState(function (state) {\n          return _objectSpread({}, state, {\n            countdown: {\n              seconds: fixNumber(secs) + secs,\n              minutes: fixNumber(mins) + mins,\n              hours: fixNumber(hrs) + hrs,\n              days: fixNumber(days) + days\n            }\n          });\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$countdown2 = this.state.countdown,\n          days = _this$state$countdown2.days,\n          minutes = _this$state$countdown2.minutes,\n          hours = _this$state$countdown2.hours,\n          seconds = _this$state$countdown2.seconds;\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(FlexItem, {\n        style: {\n          marginRight: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.createTube('number', days[0]), this.createTube('number', days[1]), this.createTube('letter', 'D')), React.createElement(FlexItem, {\n        style: {\n          marginRight: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.createTube('number', hours[0]), this.createTube('number', hours[1], true), this.createTube('letter', 'H')), React.createElement(FlexItem, {\n        style: {\n          marginRight: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.createTube('number', minutes[0], true), this.createTube('number', minutes[1]), this.createTube('letter', 'M')), React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.createTube('number', seconds[0]), this.createTube('number', seconds[1], true), this.createTube('letter', 'S')));\n    }\n  }]);\n\n  return CountdownTimer;\n}(Component);\n\nexport { CountdownTimer as default };","map":{"version":3,"sources":["/home/alanbaywalker/Documents/kingdom-hearts-countdown/src/components/CountdownTimer/CountdownTimer.js"],"names":["React","Component","Wrapper","FlexItem","Tube","Digit","Active","AltDigit","CountdownTimer","state","seconds","countdown","minutes","hours","days","fixNumber","num","toString","length","createTube","tubeType","element","styled","totalDigits","digits","i","conditionalDigit","parseInt","Math","random","opacity","letterDigit","push","setInterval","setState","Date","getSeconds","releaseDate","getTime","currentDate","timeDifference","ms","secs","mins","hrs","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Wrapper,\n  FlexItem,\n  Tube,\n  Digit,\n  Active,\n  AltDigit,\n} from './styles';\n\nexport default class CountdownTimer extends Component {\n  state = {\n    seconds: 0,\n    countdown: {\n      seconds: '00',\n      minutes: '00',\n      hours: '00',\n      days: '00'\n    }\n  }\n\n  componentDidMount () {\n    const { fixNumber } = this;\n    setInterval(() => this.setState({ ...this.state, seconds: ((new Date()).getSeconds().toString()) }), 1800);\n    setInterval(() => {\n      const releaseDate = new Date('2019-1-29').getTime();\n      const currentDate = new Date().getTime();\n      let timeDifference = releaseDate - currentDate;\n\n      const ms = timeDifference % 1000;\n      timeDifference = (timeDifference - ms) / 1000;\n      const secs = timeDifference % 60;\n      timeDifference = (timeDifference - secs) / 60;\n      const mins = timeDifference % 60;\n      timeDifference = (timeDifference - mins) / 60;\n      const hrs = timeDifference % 24;\n      timeDifference = (timeDifference - hrs) / 24;\n      const days = timeDifference % 24;\n\n      this.setState(state => ({\n        ...state,\n        countdown: {\n          seconds: fixNumber(secs) + secs,\n          minutes: fixNumber(mins) + mins,\n          hours: fixNumber(hrs) + hrs,\n          days: fixNumber(days) + days\n        }\n      }));\n\n    }, 1000);\n  }\n\n  fixNumber = num => num.toString().length === 1 ? '0' : '';\n\n  createTube = (tubeType, element, styled) => {\n    const { countdown: { minutes, seconds } } = this.state;\n    const totalDigits = 9;\n    const digits = [];\n\n\n    for(let i = 0; i <= totalDigits; i++) {\n      const conditionalDigit = parseInt(element, 10) === i\n        ? (\n            <Active\n              key={Math.random() * 1000000}\n              style={\n                (parseInt(seconds[1], 10) % 2 === 0 || parseInt(seconds[1], 10) % 3 === 0  || parseInt(seconds[1], 10) % 5 === 0) && styled\n                  ? { opacity: Math.random() - parseInt('0.' + seconds[1]) }\n                  : {}\n              }\n            >\n              {i}\n            </Active>\n        )\n        : (\n            <Digit\n              key={Math.random() * 1000000}\n              style={\n                (parseInt(seconds[1], 10) % 2 === 0 || parseInt(seconds[1], 10) % 3 === 0  || parseInt(seconds[1], 10) % 5 === 0) && styled\n                  ? { opacity: Math.random() - parseInt('0.' + seconds[1]) }\n                  : {}\n              }\n            >\n              {i}\n            </Digit>\n          );\n\n      const letterDigit = (\n        <Digit key={Math.random() * 1000000}>\n          0\n        </Digit>\n      );\n\n      tubeType === 'letter'\n        ? digits.push(letterDigit)\n        : digits.push(conditionalDigit);\n    };\n\n    return (\n      <Tube>\n        {digits}\n        {tubeType === 'letter' ? <AltDigit>{element}</AltDigit> : null}\n      </Tube>\n    );\n  }\n\n  render () {\n    const { countdown: { days, minutes, hours, seconds } } = this.state;\n\n    return(\n      <Wrapper>\n        <FlexItem style={{ marginRight: '2rem' }}>\n          {this.createTube('number', days[0])}\n          {this.createTube('number', days[1])}\n          {this.createTube('letter', 'D')}\n        </FlexItem>\n\n        <FlexItem style={{ marginRight: '2rem' }}>\n          {this.createTube('number', hours[0])}\n          {this.createTube('number', hours[1], true)}\n          {this.createTube('letter', 'H')}\n        </FlexItem>\n\n        <FlexItem style={{ marginRight: '2rem' }}>\n          {this.createTube('number', minutes[0], true)}\n          {this.createTube('number', minutes[1])}\n          {this.createTube('letter', 'M')}\n        </FlexItem>\n\n        <FlexItem>\n          {this.createTube('number', seconds[0])}\n          {this.createTube('number', seconds[1], true)}\n          {this.createTube('letter', 'S')}\n        </FlexItem>\n      </Wrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}